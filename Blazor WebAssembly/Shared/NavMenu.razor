@using MyShop
@inject ICartForShop CartForShop
@inject CountProducts CountProducts
@implements IDisposable

<div class="top-row ps-3 navbar navbar-dark">
    <div class="container-fluid">
        <a class="navbar-brand" href="">Blazor WebAssembly</a>
        <button title="Navigation menu" class="navbar-toggler" @onclick="ToggleNavMenu">
            <span class="navbar-toggler-icon"></span>
        </button>
    </div>
</div>

<div class="@NavMenuCssClass" @onclick="ToggleNavMenu">
    <nav class="flex-column">
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="" Match="NavLinkMatch.All">
                <span class="oi oi-home" aria-hidden="true"></span> Home
            </NavLink>
        </div>
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="counter">
                <span class="oi oi-plus" aria-hidden="true"></span> Counter
            </NavLink>
        </div>
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="fetchdata">
                <span class="oi oi-list-rich" aria-hidden="true"></span> Fetch data
            </NavLink>
        </div>
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="catalogpage">
                <span class="oi oi-eye" aria-hidden="true"></span> Catalog
            </NavLink>
        </div>
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="cartpage">
                <span class="oi oi-basket" aria-hidden="true"></span> Cart: &nbsp; <span class="text-warning"> @CountProducts.Count</span>
            </NavLink>
        </div>
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="addproducttocatalog">
                <span class="oi oi-eye" aria-hidden="true"></span> Add Product
            </NavLink>
        </div>
    </nav>
</div>

@code {
    private bool collapseNavMenu = true;

    private string? NavMenuCssClass => collapseNavMenu ? "collapse" : null;

    private void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }

    protected override void OnInitialized()
    {
        base.OnInitialized();

        CountProducts.OnChange += StateHasChanged;
    }

    public void Dispose()
    {
        CountProducts.OnChange -= StateHasChanged;
    }
}